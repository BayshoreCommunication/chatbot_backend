# Caddyfile for chatbot backend API
# Domain: api.bayshorecommunication.org

# Global options (set your contact email for ACME)

{
    email arsahak.bayshore@gmail.com
    acme_ca https://acme.zerossl.com/v2/DV90
    acme_eab kid kIPvTKUk44EnYgDKjW2eGg
    hmac ADlIGIvyUU2LvA4oVcNi8DbDR6uHGcG7aJhOLs8IsG2DDkaYsiP54Es8Z0sr4bx1AkNqGD_0lSOhOZ0uLGZN0w
}

api.bayshorecommunication.org {
    # Reverse proxy to the chatbot backend with WebSocket support
    reverse_proxy web:8000 {
        # Enable WebSocket support for Socket.IO
        header_up Upgrade {http.request.header.Upgrade}
        header_up Connection {http.request.header.Connection}
        header_up X-Forwarded-Proto {http.request.scheme}
        header_up X-Forwarded-Host {http.request.host}
        header_up X-Real-IP {http.request.remote}
        header_up X-Forwarded-For {http.request.remote}
        
        # Handle WebSocket upgrade requests
        @websocket {
            header Connection *Upgrade*
            header Upgrade websocket
        }

        # Increase upstream timeout for external API calls
        timeout 60s
    }
    
    # Enable gzip compression (but not for WebSocket connections)
    encode gzip
    
    # Security headers
    header {
        # HSTS
        Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
        # CORS headers for API access - more permissive for Socket.IO
        Access-Control-Allow-Origin "*"
        Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH"
        Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, X-Socket-ID"
        Access-Control-Allow-Credentials "false"
        # Security headers
        X-Content-Type-Options "nosniff"
        Referrer-Policy "strict-origin-when-cross-origin"
    }
    
    # Handle CORS preflight requests
    @cors_preflight method OPTIONS
    respond @cors_preflight 204
    
    # Logging
    log {
        output stdout
        format json
    }
}
